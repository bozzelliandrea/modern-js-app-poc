name: "CI/CD"
on:
  pull_request:
    types: [opened, synchronize, reopen]

  push:
    branches:
      - main

# Cancel any previous CI runs for this branch or PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    services:
      # Setup postgres for the tests
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - "5433:5432"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Need full checkout in order to push to heroku
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Output debugging info
        run: node -v && npm -v

      - name: Install dependencies
        run: npm ci

      - name: Format and lint
        run: npm run lint:all

      - name: Migrate local db
        run: npm run db:migrate

      - name: Test
        run: npm run test

      - name: Setup Heroku
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
          heroku git:remote -a $HEROKU_APP_NAME
          git fetch heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

      - name: Deploy to Heroku
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          git push -f heroku main
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

      - name: Migrate production db
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: DATABASE_URL=`heroku config:get -a $HEROKU_APP_NAME DATABASE_URL` echo ${DATABASE_URL} && npm run db:migrate
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

      - name: Clean Heroku credentials
        # Always clean, even on failures
        if: github.event_name == 'push' && github.ref_name == 'main' && always()
        run: rm ~/.netrc
